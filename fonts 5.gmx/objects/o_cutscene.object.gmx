<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>words = 0;
row = 0;
column = 0;
count = 0;
active = false;
mycount = 0;
c_inputwocreate();
backgroundpos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active = true {
    c_input();
    if alt &amp;&amp; select {
        if window_get_fullscreen() {
            window_set_fullscreen(false);
            window_set_position(global.ogx, global.ogy);
        } else {
            window_set_fullscreen(true);
        }
        select = false;
    }
    if select || back {
        count = 999;
    }
    mycount += .2;
    if global.cutscenecount &gt;= 1 {
        background_index[0] = bk_nebula;
        backgroundpos--;
        background_x[0] = backgroundpos;
        background_htiled[0] = true;
    }
    switch global.cutscenecount {
        case 0:
            if words &lt; 48 {
                if count % 5 = 0 {
                
                    with instance_create(column*240+120, (row+1)*53, o_text) {
                        image_index = other.words;
                    }
                    words++
                    if row &gt;= 11 {
                        row = 0;
                        column++;
                    } else {
                        row++;
                    }
                    count = 0;
                }
            } else {
                if count = 30 {
                    with instance_create(850, 0, o_text) {
                        turning = 0;
                        sprite_index = AMORTALITY;
                    }
                }
                if count = 120 {
                    with instance_create(1000, 565, o_worldbreak) {
                        sprite_index = s_worldright;
                        sidealpha = -500;
                    }
                    with instance_create(1000, 565, o_worldbreak) {
                        sprite_index = s_worldleft;
                        sidealpha = -500;
                    }
                }
                
            }
            if count &gt;= 900 {
                    instance_create(0, 0, o_fao);
                    o_cutscene.active = false;
                }
            count++;
            break;
        
        
        
        
        
        case 1:
            if count = 10 {
                with instance_create(640, 360, o_worldbreak) {
                    sprite_index = s_worldleft;
                    image_xscale = 4;
                    image_yscale = 4;
                }
                with instance_create(640, 360, o_worldbreak) {
                    sprite_index = s_worldright;
                    image_xscale = 4;
                    image_yscale = 4;
                }
            }
            if count &gt; 180 {
                global.songscript = c_lancerraps;
                instance_create(0, 0, o_fao);
                o_cutscene.active = false;
            }
            count++;
            break;
        case 2:
            if count = 10 {
                with instance_create(640, 360, o_worldbreak) {
                    sprite_index = s_worldright;
                    image_xscale = 4;
                    image_yscale = 4;
                }
                with instance_create(640, 360, o_worldbreak) {
                    sprite_index = s_worldleft;
                    image_xscale = 4;
                    image_yscale = 4;
                }
            }
            if count &gt; 180 {
                global.songscript = c_everythingwillfreeze;
                instance_create(0, 0, o_fao);
                o_cutscene.active = false;
            }
            count++;
            break;
        case 3:
            if count = 10 {
                with instance_create(640, 360, o_world) {
                    image_xscale = 4;
                    image_yscale = 4;
                }
            }
            if count &gt; 180 {
                //if global.difficulty = 1 {
                    global.songscript = c_nocturne;
                /*} else {
                    global.songscript = c_reset_set;
                    global.cutscenecount++;
                }*/
                instance_create(0, 0, o_fao);
                o_cutscene.active = false;
            }
            count++;
            break;
        case 4:
            global.songscript = c_reset_set;
            instance_create(0, 0, o_fao);
            o_cutscene.active = false;
            break;
        case 5:
            if count = 10 {
                with instance_create(640, 360, o_world) {
                    image_xscale = 4;
                    image_yscale = 4;
                    rotation = true;
                }
            }
            if count &gt; 180 {
                global.songscript = c_eonbreak;
                instance_create(0, 0, o_fao);
                o_cutscene.active = false;
            }
            count++;
            break;
        case 6:
            if count = 10 {
                with instance_create(640, 500, o_world) {
                    image_xscale = 4;
                    image_yscale = 4;
                    rotation = true;
                    drawer = 1;
                }
            }
            if count &gt; 180 {
                global.songscript = c_itsrainingsomewhereelse;
                o_cutscene.active = false;
                instance_create(0, 0, o_fao);
            }
            count++;
            break;
        case 7:
            with instance_create(0, 0, o_fao) {
                leaving = stagemenu;
            }
            break;
    }
} else {
    count = 0;
    words = 0;
    row = 0;
    column = 0;
}
if keyboard_check_pressed(vk_control) {
        console_log(instance_number(o_fao));
        console_log(instance_count);
        console_log(active);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_colour(c_white);
draw_text(50, 50, room_get_name(room));
draw_text(50, 70, string(global.cutscenecount));
draw_text(50, 90, string(global.storymode));
draw_text(50, 110, string(active));
draw_set_colour(c_black);*/
if room = cutscene {
    switch global.cutscenecount {
        case 0:
            break;
        case 6:
            draw_sprite_ext(s_tars, 1, 0, 0, 4, 4, 0, c_white, 1);
            draw_sprite_ext(s_hip, mycount%4, 64, 428, 4, 4, 0, c_white, 1);
            break;
        default:
            draw_sprite_ext(s_tars, 0, 0, 0, 4, 4, 0, c_white, 1);
            draw_sprite_ext(s_hip, mycount%4, 64, 128, 4, 4, 0, c_white, 1);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
