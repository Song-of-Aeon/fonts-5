<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_aka</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspd = 0;
vspd = 0;
dir = 0;
if global.red != s_sun {
    image_speed = MELODYCHASER.bpm/1125;
} else {
    image_speed = 0;
    image_index = irandom(2)
}
tail = noone;
count = 0;
alarm[0] = 5-irandom(4);
fading = false;
tookdir = false;
stringto = noone;
alarm[1] = 1;
bitch = 0;
savedx = x;
savedy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if collision_line(MELODYCHASER.laneleft, y+32*global.xmod, MELODYCHASER.laneright, y+32*global.xmod, o_note, false, true) != noone {
    stringto = collision_line(MELODYCHASER.laneleft, y+32*global.xmod, MELODYCHASER.laneright, y+32*global.xmod, o_note, false, true);
}*/
if collision_line(MELODYCHASER.laneleft, y+8*global.xmod, MELODYCHASER.laneright, y+8*global.xmod, o_note, false, true) != noone &amp;&amp; global.streamstring = true {
    stringto = collision_line(MELODYCHASER.laneleft, y+8*global.xmod, MELODYCHASER.laneright, y+8*global.xmod, o_note, false, true);
}
switch dir {
        case 0:
            image_angle = -90;
            break;
        case 1:
            image_angle = 0;
            break;
        case 2:
            image_angle = 180;
            break;
        case 3:
            image_angle = 90;
            break;
    }
savedx = x;
savedy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.hidden = true {
    if y &lt; view_hview/5*3 {
        fading = true;
    }
    
}
alarm[0] = 3; //let him inside
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count++;

if count &gt;= 240 {
    if global.mmod = 0 {
        hspd = hspd/(1.1*(global.xmod/8));
    } else {
        hspd = hspd/(1.1*(global.mmod/450));
    }
    if abs(hspd) &lt;= .2 {
        hspd = 0;
    }
    y += vspd*global.truetime;
}






if y &lt; 720 + sprite_height/2 {
    x = savedx;
    x += hspd*global.truetime;
    if MELODYCHASER.notechange = false &amp;&amp; global.songscript = c_reset_set {
        switch dir {
            case 0:
                image_angle = -90;
                break;
            case 1:
                image_angle = 0;
                break;
            case 2:
                image_angle = 180;
                break;
            case 3:
                image_angle = 90;
                break;
        }
    }
    
    if y &lt;= MELODYCHASER.bar {
        if instance_exists(o_textbox) &amp;&amp; !tookdir {
            o_textbox.durability--;
            tookdir = true;
        } else if tookdir &amp;&amp; y &lt;= -32 {
            instance_destroy();
        }
    }
    if fading {
        if image_alpha &gt; 0 {
            image_alpha -= .1;
        }
        if y &lt; view_yview/10 || y &lt; MELODYCHASER.bar+32 {
            fading = false;
        }
    } else if image_alpha &lt; 1 {
        image_alpha += .1;
    }
    if MELODYCHASER.noteturn = true {
        image_angle += 20;
        //bitch++;
    }
    if y &gt; MELODYCHASER.chokepoint {
        x = MELODYCHASER.lanedown+MELODYCHASER.lanespacing/4;
        hspd = x-savedx;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if y &lt; 720 + sprite_height/2 {
    if MELODYCHASER.osumode {
        draw_set_colour(c_maroon);
        draw_circle_width(x, y, (y)/3, 7, 20);
    }
    if global.notecover = s_kaguya {
        draw_self();
    } else {
        draw_sprite_ext(global.notecover, 0, x, y, image_xscale, image_yscale, 180, image_blend, image_alpha);
    }
    if instance_exists(stringto) {
        draw_set_colour(c_teal);
        draw_line_width(x, y, stringto.x, stringto.y, 3);
    }
    
    //draw_set_colour(c_teal);
    //draw_circle_width(x, y, 16, 5, 10);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
